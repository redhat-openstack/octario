pep8:
    rpm_deps: []
    remove_rpm: []
    archive_run: ''
    run: >
      git checkout -- test-requirements.txt requirements.txt;
      tox -v -e pep8 2>&1 | tee ../logs/testrun.log;

# Remove neutron installation from PyPi when neutron_lib.tests and neutron.tests avaiable by RPM
unittest:
    rpm_deps: [ python3-networking-ovn,
                python3-cliff,
                python3-requests-mock,
                python3-webtest,
                python3-mock,
                python3-oslotest,
                python3-testresources,
                python3-pep8,
                python3-designateclient,
                python3-flake8,
                openstack-neutron-openvswitch,
                python3-os-testr,
                python3-oslo-db,
                python3-os-testr,
                python3-ddt,
                python3-neutron,
                python3-neutron-tests,
                python3-neutron-lib,
                python3-neutron-lib-tests ]
    remove_rpm: [ python3-networking-ovn ]
    archive_run: ''
    run: >
        sudo pip3 uninstall -y neutron-lib neutron;
        sudo pip3 install -U neutron-lib neutron;
        sudo pip3 install SQLAlchemy==1.2.18;
        tox --sitepackages -v -e py36 2>&1 | tee ../logs/testrun.log;

# Install ovsdbapp from PyPi to get ovsdbapp.tests as the package is currently not available
dsvm-functional:
    rpm_deps: [ openstack-neutron-openvswitch, python3-testresources,
                python3-oslotest, nmap-ncat, ebtables, openstack-selinux,
                mysql-server, python3-novaclient, python3-keystonemiddleware, rust, cargo,
                psmisc, nfs-utils, selinux-policy, python3-os-testr, python3-oslo-rootwrap,
                python3-ovsdbapp-tests, python3-neutron-lib-tests, openvswitch-ovn-common,
                openvswitch-ovn-central, openvswitch-ovn-host, openvswitch-ovn-vtep,
                python3-octavia-lib, python3-tooz ]
    remove_rpm: []
    archive_run: tar zcvf /home/cloud-user/logs/functional-tests.tar.gz /opt/stack/logs/dsvm-functional-logs;
    run: >
        export USE_PYTHON3=True;
        sudo pip3 install --upgrade pip;
        sudo git config --global http.sslVerify "false";
        sudo sed -i -e "\$asslverify=0" /etc/dnf/dnf.conf;
        sudo dnf install -y http://download.eng.bos.redhat.com/brewroot/vol/rhel-8/packages/python-tox/2.9.1/6.el8+7/noarch/python3-tox-2.9.1-6.el8+7.noarch.rpm;
        sudo pip3 uninstall -y ovsdbapp neutron-lib neutron;
        sudo pip3 install ovsdbapp testresources os_xenapi setuptools_rust 'neutron-lib<=1.29.1';
        export GIT_SSL_NO_VERIFY=true;
        git clone https://code.engineering.redhat.com/gerrit/neutron.git
        pushd neutron
        git checkout origin/rhos-16.1-trunk-patches
        popd
        truncate --size 0 /home/cloud-user/networking-ovn/networking_ovn/tests/functional/requirements.txt;
        sudo mkdir /opt/stack;
        sudo chmod -R 777 /opt/stack;
        sudo yum update -y kernel;
        export BASE=/home/cloud-user;
        sudo chmod +x /home/cloud-user/networking-ovn/networking_ovn/tests/contrib/gate_hook.sh;
        sed -i "s/GATE_STACK_USER=stack/GATE_STACK_USER=cloud-user/" /home/cloud-user/networking-ovn/networking_ovn/tests/contrib/gate_hook.sh;
        sed -i "s/pip/pip3/g" /home/cloud-user/networking-ovn/networking_ovn/tests/contrib/gate_hook.sh;
        sed -i "/compile_ovs/d" /home/cloud-user/networking-ovn/networking_ovn/tests/contrib/gate_hook.sh;
        sed -i "/configure_.*for_func_testing/d" /home/cloud-user/networking-ovn/networking_ovn/tests/contrib/gate_hook.sh;
        mkdir /home/cloud-user/new;
        cd /home/cloud-user/new;
        git clone -b stable/train https://github.com/openstack/neutron.git;
        git clone -b stable/train https://github.com/openstack-dev/devstack.git;
        cp -r /home/cloud-user/networking-ovn /home/cloud-user/new/;
        cd /home/cloud-user/networking-ovn;
        sed -i "s/\`uname -r\`/3.10.0-957.el7.x86_64/g" /home/cloud-user/new/neutron/devstack/lib/ovs;
        /home/cloud-user/networking-ovn/networking_ovn/tests/contrib/gate_hook.sh dsvm-functional;
        export PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/cloud-user/.local/bin:/home/cloud-user/bin;
        sudo ln -s /usr/share/openvswitch /usr/local/share/openvswitch;
        sudo ln -s /usr/share/ovn/ovn-sb.ovsschema /usr/local/share/openvswitch/ovn-sb.ovsschema;
        sudo ln -s /usr/share/ovn/ovn-nb.ovsschema /usr/local/share/openvswitch/ovn-nb.ovsschema;
        export OVN_SRCDIR=/usr/share/ovn;
        tox --sitepackages -v -e dsvm-functional 2>&1 | tee ../logs/testrun.log;

# hostvars[inventory_hostname] is a special ansible variable to get all host's facts
# tester.component.tox_target can be one of the following: [unittest, pep8, dsvm-functional, api]

# Common rpm deps needed for all tester types
rpm_deps: [
  gcc, gcc-c++, git, python3-devel, python3-testrepository, python3-pip, python3-py,
  python3-testscenarios, libffi-devel, openssl-devel, python3-virtualenv, python3-pluggy,
  "{{ hostvars[inventory_hostname][tester.component.tox_target]['rpm_deps'] }}"
]

# The rpms that shouldn't be installed on system, when running tests
remove_rpm: [ "{{ hostvars[inventory_hostname][tester.component.tox_target]['remove_rpm'] }}" ]

# Common pre-run steps used by all tester types
networking_ovn_virt_run_config:
  run: >
    set -o pipefail;
    rpm -qa | sort > ../logs/installed-rpms.log;

    truncate --size 0 requirements.txt;
    truncate --size 0 test-requirements.txt;

    sudo pip3 install tox;

    {{ hostvars[inventory_hostname][tester.component.tox_target]['run'] }}

  archive_run: |
      {{ hostvars[inventory_hostname][tester.component.tox_target]['archive_run'] }}

  archive:
    - ../logs/functional-tests.tar.gz

# NOTE: This is the main section. It must exist.
test_config:
  virt:
    RedHat-8:
      setup:
        install: "{{ rpm_deps }}"
        remove: "{{ remove_rpm }}"
        enable_repos: []
      run: "{{ networking_ovn_virt_run_config.run }}"
      archive: "{{ networking_ovn_virt_run_config.archive }}"
      archive_run: "{{ networking_ovn_virt_run_config.archive_run }}"
    default:
      setup:
        install: "{{ rpm_deps }}"
        remove: "{{ remove_rpm }}"
        enable_repos: []
      run: "{{ networking_ovn_virt_run_config.run }}"
      archive: "{{ networking_ovn_virt_run_config.archive }}"
      archive_run: "{{ networking_ovn_virt_run_config.archive_run }}"
